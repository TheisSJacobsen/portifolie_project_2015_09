@model PortfolioMVC.tbluser
@{
    ViewBag.Title = "PortfolioEdit";
    ViewBag.DefaultImg = "/Images/DefUser.png";
    ViewBag.ErrorImg = "/Images/error.png";
}
<script>
    //function uploadPreview() {
    //    var imgprev = $('#pic');
    //    var upload = $('#uploader')[0];
    //    var reader = new FileReader();

    //    reader.onload = function () {
    //        imgprev.src = reader.result;
    //    }

    //    if (upload)
    //        reader.readAsDataURL(upload);
    //    else
    //        imgprev.src = "";
    //}

    //uploadPreview();
    function onFileSelected(event){
        var selectedFile = event.target.files[0];
        var reader = new FileReader();
        var pic = $('#pic')[0];
        var holder = $('#pic_hidden')[0];
        //var vid={name:'',media_type:'',source:''};
        reader.onload = function(event) {
            pic.src = event.target.result;
            holder.value = event.target.result;
        }
        reader.readAsDataURL(selectedFile);
    };
    var status = $('#test_data');
    var drop = $('#uploader');
    var img = $('#pic');

    if (window.FileReader) {
        addEventHandler(window, 'load', function () {
            

            function cancel(e) {
                if (e.preventDefault) { e.preventDefault(); }
                return false;
            }

            // Tells the browser that we *can* drop on this target
            addEventHandler(drop, 'dragover', cancel);
            addEventHandler(drop, 'dragenter', cancel);
        });
    } else {
        $('#test_data').innerHTML = 'Your browser does not support the HTML5 FileReader.';
    }
    function addEventHandler(obj, evt, handler) {
        if (obj.addEventListener) {
            // W3C method
            obj.addEventListener(evt, handler, false);
        } else if (obj.attachEvent) {
            // IE method.
            obj.attachEvent('on' + evt, handler);
        } else {
            // Old school method.
            obj['on' + evt] = handler;
        }
    }
    addEventHandler(drop, 'drop', function (e) {
        e = e || window.event; // get window.event if e argument missing (in IE)   
        if (e.preventDefault) { e.preventDefault(); } // stops the browser from redirecting off to the image.

        var data = e.dataTransfer;
        var file = data.files[0];
        
        var reader = new FileReader();

        //attach event handlers here...

        reader.readAsDataURL(file);
        
        return false;
    });
    addEventHandler(reader, 'loadend', function (e, file) {
        var bin = this.result;
        img.src = bin;
    }.bindToEventHandler(file));

</script>
<style>
    #pic {
        width: 250px;
        float: right;
    }

    .middleWidth {
        max-width: 888px;
    }
    form .delete {
        background: url("/Images/error.png");
        background-size: cover;
        width: 16px;
        height: 16px;
        border:0;
    }
    .educations form, .jobs form,h2 {
        display: -webkit-inline-box;
    }
</style>
<div class="middleWidth">
    <h2>@(((PortfolioMVC.tbluser)Session["isLoggedIn"]).userFullName)'s Portfolie Editing</h2>

    @using (Html.BeginForm("userpost", "home", FormMethod.Post))
    {
        <img id="pic" onerror="this.src=@(ViewBag.DefaultImg)" src="@if (((PortfolioMVC.tbluser)Session["isLoggedIn"]).userPicture != null) { @(((PortfolioMVC.tbluser)Session["isLoggedIn"]).userPicture)  } else {  @(ViewBag.DefaultImg)  } " />
        <p id="test_data"></p>
        <input type="hidden" name="pic" id="pic_hidden"/>
        <input type="text" name="fullname" value="@(((PortfolioMVC.tbluser)Session["isLoggedIn"]).userFullName)" />
        <input type="text" name="description" value="@(((PortfolioMVC.tbluser)Session["isLoggedIn"]).userDescription)" />
        <input type="text" name="address" value="@(((PortfolioMVC.tbluser)Session["isLoggedIn"]).userAddress)" />
        <input id="uploader" type="file" placeholder="A picture of you" accept="image/*" onchange="onFileSelected(event);" />

        <input type="submit" value="Ændre" />
    }
    <h1>Educations</h1>
    <ul class="educations">
        @foreach (var edu in Model.tblportfolio.tbleducations)
        {
            <li>
                <h2 class="subject">@edu.eduName</h2>
                @using (Html.BeginForm("educationRemove", "home", FormMethod.Post))
                {
                <input type="hidden" name="id" value="@edu.ID" />
                <input class="delete" type="submit" title="Delete" value="">
                }
                <p class="dato">Påstartet: @edu.eduStart</p>
                <p class="dato">Afsluttet: @edu.eduFinish</p>
                <p class="schoolName">Skolenavn: @edu.eduSchool</p>
                <div class="edu map" data-location="@edu.eduAddress"></div>
            </li>
        }
    </ul>
    @using (Html.BeginForm("educationAdd", "home", FormMethod.Post))
    {
        <h3>Add an education</h3>
        <input name="subject" type="text" placeholder="Name of subject of study" />
        <input name="school" type="text" placeholder="School name" />
        <input name="address" type="text" placeholder="School Address" />
        <p>From:</p> <input name="from" type="date" />
        <p>To:</p> <input name="to" type="date" />
        <input type="submit" value="Add" />
    }
    <h1>Jobs</h1>
    <ul class="jobs">
        @foreach (var job in Model.tblportfolio.tblworks)
        {
            <li>
                <h2>@job.workName</h2>
                @using (Html.BeginForm("jobRemove", "home", FormMethod.Post))
                {
                <input type="hidden" name="id" value="@job.ID" />
                <input class="delete" type="submit" title="Delete" value="">
                }
                <p class="dato">Påstartet: @job.workStart</p>
                <p class="dato">Afsluttet: @job.workFinish</p>
                <p class="jobTitle">Title: @job.workTitle</p>
                <p class="referance">Refferance: @job.workReferenceName tlf:@job.workReferenceNumber</p>
                <div class="work map" data-location="@job.workAddress"></div>
            </li>
        }
    </ul>
    @using (Html.BeginForm("jobAdd", "home", FormMethod.Post))
    {
        <h3>Add a Job</h3>
        <input type="text" name="" placeholder="Name of field or title of job/work" />
        <input type="text" name="" placeholder="Workplace name" />
        <input type="text" name="" placeholder="Workplace address" />
        <input type="text" name="" placeholder="Work Refferance Name" />
        <input type="text" name="" placeholder="Work Refferance Number" />
        <p>From:</p> <input name="from" type="date" />
        <p>To:</p> <input name="to" type="date" />
        <input type="submit" value="Add" />
    }
    <h1>Portfolio</h1>
    @using (Html.BeginForm("portfolioDescription", "home", FormMethod.Post)){
    <textarea name="description" rows="4" cols="50">@Model.tblportfolio.portDescription</textarea>
    <input type="submit" name="name" value="Change" />
    }









    

    <br />
</div>



@*<div class="user map" data-location="@Model.userAddress"></div>*@
